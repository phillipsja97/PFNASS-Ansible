---
- name: Pull Jacket Docker Image
  community.docker.docker_image:
    name: lscr.io/linuxserver/jackett:latest
    state: present
    source: pull

- name: Start Jackett Docker Container
  community.docker.docker_container:
    name: jackett
    image: lscr.io/linuxserver/jackett:latest
    keep_volumes: true
    networks:
      - name: "{{ PLEX_NETWORK }}"
    pull: false
    restart_policy: unless-stopped
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: America/Chicago
    volumes:
      - "{{ jackett_path }}/config:/config"
    ports:
      "{{ jackett_port }}"

- name: Pull Overseerr Docker Image
  community.docker.docker_image:
    name: lscr.io/linuxserver/overseerr:latest
    state: present
    source: pull

- name: Start Overseerr Docker Container
  community.docker.docker_container:
    name: overseerr
    image: lscr.io/linuxserver/overseerr:latest
    keep_volumes: true
    networks:
      - name: "{{ PLEX_NETWORK }}"
    pull: false
    restart_policy: unless-stopped
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: America/Chicago
    volumes:
      - "{{ overseerr_path }}/config:/config"
    ports:
      "{{ overseerr_ports }}"

- name: Pull PD_ZURG Docker Image
  community.docker.docker_image:
    name: iampuid0/pd_zurg:latest
    state: present
    source: pull

- name: Start PD_ZURG Docker Container
  community.docker.docker_container:
    name: PD_ZURG
    image: iampuid0/pd_zurg:latest
    keep_volumes: true
    networks:
      - name: "{{ plex_network }}"
    pull: false
    restart_policy: unless-stopped
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: America/Chicago
     # Zurg Required Settings
      ZURG_ENABLED: "true"
      RD_API_KEY: "{{ rd_key }}"
     # Zurg Optional Settings
      ZURG_LOG_LEVEL: INFO
     # ZURG_VERSION=v0.9.2-hotfix.4
      ZURG_UPDATE: "true"
      PLEX_REFRESH: "true"
      PLEX_MOUNT_DIR: "{{ plex_media_path }}/config:data:rshared"
      ZURG_USER: "{{ zurg_user }}"
      ZURG_PASS: "{{ zurg_pass }}"
      ZURG_PORT: "{{ zurg_port }}"
    ## Rclone Required Settings
      RCLONE_MOUNT_NAME: pd_zurg
     # Rclone Optional Settings See rclone docs for full list
     # NFS_ENABLED=true
     # NFS_PORT=8000
      RCLONE_LOG_LEVEL: DEBUG
     # RCLONE_CACHE_DIR=/cache
     # RCLONE_DIR_CACHE_TIME=10s
     # RCLONE_VFS_CACHE_MODE=full
     # RCLONE_VFS_CACHE_MAX_SIZE=100G
     # RCLONE_ATTR_TIMEOUT=8700h
     # RCLONE_BUFFER_SIZE=32M
     # RCLONE_VFS_CACHE_MAX_AGE=4h
     # RCLONE_VFS_READ_CHUNK_SIZE=32M
     # RCLONE_VFS_READ_CHUNK_SIZE_LIMIT=1G
     # RCLONE_TRANSFERS=8
    ## Plex Debrid Required Settings
      PD_ENABLED: "true"
      ## To utilize plex_debrid with Plex, the following environment variables are required
      PLEX_USER: "{{ plex_user }}"
      PLEX_TOKEN: "{{ plex_token }}"
      PLEX_ADDRESS: "{{ plex_address }}"
      ## Plex Debrid Optional Settings
      PD_UPDATE: "false"
      SHOW_MENU: "false"
      SEERR_API_KEY: "{{ seerr_api_key }}"
      SEERR_ADDRESS: "{{ seerr_address }}"
      ## Special Features
     # - AUTO_UPDATE_INTERVAL=12
     # - DUPLICATE_CLEANUP=true
     # - CLEANUP_INTERVAL=1
      PD_LOG_LEVEL: INFO
     # - PDZURG_LOG_COUNT=2
    # Example to attach to gluetun vpn container if realdebrid blocks IP address
    # network_mode: container:gluetun
    volumes:
      ## Location of configuration files. If a Zurg config.yml and/or Zurg app is placed here, it will be used to override the default configuration
      - "{{ plex_media_path }}/config:/config"
      ## Location for logs
      - "{{ plex_media_path }}/log:/log"
      ## Location for rclone cache if enabled
      - "{{ plex_media_path }}/cache:/cache"
      ## Location for Zurg RealDebrid active configuration
      - "{{ plex_media_path }}/RD:/zurg/RD"
      ## Location for Zurg AllDebrid active configuration -- when supported by Zurg
      # - "{{ plex_media_path }}/AD:/zurg/AD
      ## Location for rclone mount to host
      - "{{ plex_media_path }}/config:/data:shared"
    devices:
      - /dev/fuse:/dev/fuse:rwm
    capabilities:
      - SYS_ADMIN
    security_opts:
      - apparmor:unconfined
      - no-new-privileges

- name: Pull Plex Docker Image
  community.docker.docker_image:
    name: ghcr.io/linuxserver/plex
    state: present
    source: pull

- name: Start Plex Docker Container
  community.docker.docker_container:
    name: plex
    image: ghcr.io/linuxserver/plex
    networks:
      - name: "{{ plex_network }}"
    pull: false
    restart_policy: unless-stopped
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: America/Chicago
      VERSION: docker
    volumes:
      - "{{ plex_media_path }}/config:/config"
      - /dev/shm:/transcode
      - "{{ plex_media_path }}/config:/rclone"
    ports:
      "{{ plex_port }}"
