---
- name: Pull Jacket Docker Image
  docker_image: 
    name: lscr.io/linuxserver/jackett:latest
    state: present
- name: Start Jackett Docker Container
  docker_container:
    name: jackett
    image: lscr.io/linuxserver/jackett:latest
    purge_networks: yes
    keep_volumes: true
    networks:
      - name: "{{ PROXY_NETWORK }}"
    pull: no
    restart_policy: unless-stopped
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: America/Chicago
    volumes:
    - "{{ JACKETT_PATH }}/config:/config"
    ports:
      "{{ JACKETT_PORT }}"

- name: Pull Overseerr Docker Image
  docker_image: 
    name: lscr.io/linuxserver/overseerr:latest
    state: present

- name: Start Overseerr Docker Container
  docker_container:
    name: overseerr
    image: lscr.io/linuxserver/overseerr:latest
    purge_networks: yes
    keep_volumes: true
    networks:
      - name: "{{ PROXY_NETWORK }}"
    pull: no
    restart_policy: unless-stopped
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: America/Chicago
    volumes:
    - "{{ OVERSEERR_PATH }}/config:/config"
    ports:
      "{{ OVERSEERR_PORTS }}"

- name: Pull PD_ZURG Docker Image
  docker_image: 
    name: iampuid0/pd_zurg:latest
    state: present

- name: Start PD_ZURG Docker Container
  docker_container:
    name: PD_ZURG
    image: iampuid0/pd_zurg:latest
    purge_networks: yes
    keep_volumes: true
    networks:
      - name: "{{ PROXY_NETWORK }}"
    pull: no
    restart_policy: unless-stopped
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: America/Chicago
     # Zurg Required Settings
      ZURG_ENABLED: "true"
      RD_API_KEY: "{{ RD_KEY }}"
     # Zurg Optional Settings
      ZURG_LOG_LEVEL: INFO
     # ZURG_VERSION=v0.9.2-hotfix.4
      ZURG_UPDATE: "true"
      PLEX_REFRESH: "true"
      PLEX_MOUNT_DIR: "{{ PLEX_MEDIA_PATH }}/mnt/pd_zurg"
      ZURG_USER: "{{ ZURG_USER }}"
      ZURG_PASS: "{{ ZURG_PASS }}"
      ZURG_PORT: "{{ ZURG_PORT }}"
    ## Rclone Required Settings
      RCLONE_MOUNT_NAME: pd_zurg
     # Rclone Optional Settings See rclone docs for full list
     # NFS_ENABLED=true
     # NFS_PORT=8000
      RCLONE_LOG_LEVEL: INFO
     # RCLONE_CACHE_DIR=/cache
     # RCLONE_DIR_CACHE_TIME=10s
     # RCLONE_VFS_CACHE_MODE=full
     # RCLONE_VFS_CACHE_MAX_SIZE=100G
     # RCLONE_ATTR_TIMEOUT=8700h
     # RCLONE_BUFFER_SIZE=32M
     # RCLONE_VFS_CACHE_MAX_AGE=4h
     # RCLONE_VFS_READ_CHUNK_SIZE=32M
     # RCLONE_VFS_READ_CHUNK_SIZE_LIMIT=1G
     # RCLONE_TRANSFERS=8
    ## Plex Debrid Required Settings
      PD_ENABLED: "true"
      ## To utilize plex_debrid with Plex, the following environment variables are required
      PLEX_USER: "{{ PLEX_USER }}"
      PLEX_TOKEN: "{{ PLEX_TOKEN }}"
      PLEX_ADDRESS: "{{ PLEX_ADDRESS }}"
    ## To utilize plex_debrid with Jellyfin, the following environment variables are required - Note that plex_debrid will require addtional setup befor use with Jellyfin
     # - JF_ADDRESS
     # - JF_API_KEY
      ## Plex Debrid Optional Settings
      PD_UPDATE: "true"
      SHOW_MENU: "false"
      SEERR_API_KEY: "{{ SEERR_API_KEY }}"
      SEERR_ADDRESS: "{{ SEERR_ADDRESS }}"
      ## Special Features
     # - AUTO_UPDATE_INTERVAL=12
     # - DUPLICATE_CLEANUP=true
     # - CLEANUP_INTERVAL=1
      PD_LOG_LEVEL: DEBUG
     # - PDZURG_LOG_COUNT=2
    # Example to attach to gluetun vpn container if realdebrid blocks IP address 
    # network_mode: container:gluetun  
    volumes:
      ## Location of configuration files. If a Zurg config.yml and/or Zurg app is placed here, it will be used to override the default configuration and/or app used at startup. 
      - "{{ PLEX_MEDIA_PATH }}/config:/config"
      ## Location for logs
      - "{{ PLEX_MEDIA_PATH }}/log:/log"
      ## Location for rclone cache if enabled
      - "{{ PLEX_MEDIA_PATH }}/cache:/cache"
      ## Location for Zurg RealDebrid active configuration
      - "{{ PLEX_MEDIA_PATH }}/RD:/zurg/RD"
      ## Location for Zurg AllDebrid active configuration -- when supported by Zurg     
      ##- "{{ PLEX_MEDIA_PATH }}/AD:/zurg/AD   
      ## Location for rclone mount to host
      - "{{ PLEX_MEDIA_PATH }}/mnt:/data:shared"
      # - "{{ PLEX_MEDIA_PATH }}/RD/plex_update.sh"
      # - "{{ PLEX_MEDIA_PATH }}/RD/plex_refresh.sh"
    devices:
      - /dev/fuse:/dev/fuse:rwm
    capabilities:
      - SYS_ADMIN
    security_opts:
      - apparmor:unconfined
      - no-new-privileges

- name: Pull Plex Docker Image
  docker_image: 
    name: ghcr.io/linuxserver/plex
    state: present

- name: Start Plex Docker Container
  docker_container:
    name: plex
    image: ghcr.io/linuxserver/plex
    purge_networks: yes
    keep_volumes: true
    networks:
      - name: "{{ PROXY_NETWORK }}"
    pull: no
    restart_policy: unless-stopped
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: America/Chicago
      VERSION: docker
    volumes:
      - "{{ PLEX_MEDIA_PATH }}/config:/config"
      - /dev/shm:/transcode
      - "{{ PLEX_MEDIA_PATH }}/mnt/pd_zurg:/pd_zurg"
    ports:
      "{{ PLEX_PORT }}"